apiVersion: v1
kind: Service
metadata:
  name: backendtest-service
spec:
  selector:
    app: backendtest
  ports:
  - protocol: "TCP"
    port: 9000
    targetPort: 9000
  type: LoadBalancer

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backendtest
spec:
  selector:
    matchLabels:
      app: backendtest
  replicas: 5
  template:
    metadata:
      labels:
        app: backendtest
    spec:
      containers:
      - name: backendtest
        image: backendtest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: pv-data
          mountPath: /var/lib/postgresql/data
        env:
        - name: POSTGRES_PASSWORD
          value: "postgres"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_DB
          value: "news" 
      volumes:
      - name: pv-data
        persistentVolumeClaim:
          claimName: postgres-pv-claim

---

apiVersion: v1
kind: Service
metadata:
  name: frontendtest-service
spec:
  selector:
    app: frontendtest
  ports:
  - protocol: "TCP"
    port: 8000
    targetPort: 8000
  type: LoadBalancer

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontendtest
spec:
  selector:
    matchLabels:
      app: frontendtest
  replicas: 5
  template:
    metadata:
      labels:
        app: frontendtest
    spec:
      containers:
      - name: frontendtest
        image: frontendtest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: pv-data
          mountPath: /var/lib/postgresql/data
        env:
        - name: POSTGRES_PASSWORD
          value: "postgres"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_DB
          value: "news"     
      volumes:
      - name: pv-data
        persistentVolumeClaim:
          claimName: postgres-pv-claim
